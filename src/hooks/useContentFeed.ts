import { useState, useEffect } from 'react';

interface ContentItem {
  type: string;
  title: string;
  excerpt: string;
  link: string;
  source: string;
  date: string;
  size?: string;
  audioLength?: string;
  audioUrl?: string;
  image?: string;
  views?: number;
}

interface ContentFeed {
  lastUpdated: string;
  content: ContentItem[];
}

export function useContentFeed() {
  const [content, setContent] = useState<ContentItem[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchContent = async () => {
      try {
        // Fetch from static JSON file (generated by GitHub Actions)
        const response = await fetch('/priyata-universe/content-feed.json');
        
        if (!response.ok) {
          throw new Error('Failed to load content');
        }
        
        const data: ContentFeed = await response.json();
        setContent(data.content);
        setLoading(false);
      } catch (err) {
        console.error('Error loading content:', err);
        setError('Failed to load content');
        setLoading(false);
      }
    };

    fetchContent();
  }, []);

  return { content, loading, error };
}
